package user;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;


public class UserDAO {

	private Connection conn;//자바와 데이터 베이스 연결
	private PreparedStatement pstmt; //쿼리문 대기 및 설정
	private ResultSet rs;//결과값 받아오기
	
	//생성자 메소드마다 반복되는(중복되는) 코드를 간소화 시킴
	public UserDAO() {
		try {
			String dbURL = "jdbc:mysql://localhost:3306/board";
			String dbID = "root";
			String dbPassword = "1234";
			Class.forName("org.mysql.cj.jdbc.Driver");
			//마리아 db를 사용할 경우 Class.forName("org.mariadb.jdbc.Driver);
			//JDBC연결 클래스를 'String'타입으로 불러옵니다
			conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
			//드라이버 매니저에 미리 정장했던 연결 URL과 DB계정 정보를 담아 연결설정을 한다
		}catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	/*로그인 메서드
	로그인 성공(1) 패스워드틀림(0), 아이디 없음(-1), -2(오류)
	SQL => Structured Query Language
	select 선택 update 수정, delete 삭제, Insert 삽입 
	Select Statement
	:데이터베이스에서 데이터를 선택하는데 사용됩니다
	where 레코드를 필터링(지정된 조건을 충족하는 레코드만 추출) 하는데 사용됩니다
	select * from Country(테이블명) where city='seoul';
	Create(insert) Read(select) Update Delete
	*/
	public int login(String userID, String userPassword) {//매개변수로 id, pw
		
		String sql = "select userPassword from user where userID = ?";
		//선택된 유저아이디에 패스워드를 선택 sql변수 = sql쿼리문이다
		try {
			
			pstmt = conn.prepareStatement(sql);//sql쿼리문을 대기
pstmt.setString(1, userID);//첫번째 '?'에 매개변수로 받아온 'userID'를 대입			
rs=pstmt.executeQuery();//쿼리실행한 결과를 rs에 저장
/*가지고 있는 값을 리턴할때는 executeQuery(crud에서 read[list, view] 그외 쓰기 ,수정 ,삭제 일때는 executeUpdate*/

if(rs.next()) {//만약 결과값이 존재한다면 해당 결과값을 얻을수 있다 getString(1)컬럼인덱스
	if(rs.getString(1).equals(userPassword)) {//선택한 userID에 패스워드값이 일치한다면
		return 1;//로그인 성공
	}else
		return 0;//비밀번호 틀림 실패
}
		}catch(Exception e) {
			
		}
	}
	
	
	
	
	
	
	
	
}
